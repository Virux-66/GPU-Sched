digraph "CFG for '_ZL16cudaLaunchKernelIcE9cudaErrorPKT_4dim3S4_PPvmP11CUstream_st' function" {
	label="CFG for '_ZL16cudaLaunchKernelIcE9cudaErrorPKT_4dim3S4_PPvmP11CUstream_st' function";

	Node0x55f8461ab760 [shape=record,label="{entry:\l  %gridDim = alloca %struct.dim3, align 4\l  %coerce = alloca \{ i64, i32 \}, align 4\l  %blockDim = alloca %struct.dim3, align 4\l  %coerce1 = alloca \{ i64, i32 \}, align 4\l  %func.addr = alloca i8*, align 8\l  %args.addr = alloca i8**, align 8\l  %sharedMem.addr = alloca i64, align 8\l  %stream.addr = alloca %struct.CUstream_st*, align 8\l  %agg.tmp = alloca %struct.dim3, align 4\l  %agg.tmp2 = alloca %struct.dim3, align 4\l  %agg.tmp.coerce = alloca \{ i64, i32 \}, align 4\l  %agg.tmp2.coerce = alloca \{ i64, i32 \}, align 4\l  %0 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %coerce, i32 0, i32 0\l  store i64 %gridDim.coerce0, i64* %0, align 4\l  %1 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %coerce, i32 0, i32 1\l  store i32 %gridDim.coerce1, i32* %1, align 4\l  %2 = bitcast %struct.dim3* %gridDim to i8*\l  %3 = bitcast \{ i64, i32 \}* %coerce to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 12,\l... i1 false)\l  %4 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %coerce1, i32 0, i32\l... 0\l  store i64 %blockDim.coerce0, i64* %4, align 4\l  %5 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %coerce1, i32 0, i32\l... 1\l  store i32 %blockDim.coerce1, i32* %5, align 4\l  %6 = bitcast %struct.dim3* %blockDim to i8*\l  %7 = bitcast \{ i64, i32 \}* %coerce1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12,\l... i1 false)\l  store i8* %func, i8** %func.addr, align 8\l  store i8** %args, i8*** %args.addr, align 8\l  store i64 %sharedMem, i64* %sharedMem.addr, align 8\l  store %struct.CUstream_st* %stream, %struct.CUstream_st** %stream.addr,\l... align 8\l  %8 = load i8*, i8** %func.addr, align 8\l  %9 = bitcast %struct.dim3* %agg.tmp to i8*\l  %10 = bitcast %struct.dim3* %gridDim to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64\l... 12, i1 false)\l  %11 = bitcast %struct.dim3* %agg.tmp2 to i8*\l  %12 = bitcast %struct.dim3* %blockDim to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64\l... 12, i1 false)\l  %13 = load i8**, i8*** %args.addr, align 8\l  %14 = load i64, i64* %sharedMem.addr, align 8\l  %15 = load %struct.CUstream_st*, %struct.CUstream_st** %stream.addr, align 8\l  %16 = bitcast \{ i64, i32 \}* %agg.tmp.coerce to i8*\l  %17 = bitcast %struct.dim3* %agg.tmp to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64\l... 12, i1 false)\l  %18 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %agg.tmp.coerce,\l... i32 0, i32 0\l  %19 = load i64, i64* %18, align 4\l  %20 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %agg.tmp.coerce,\l... i32 0, i32 1\l  %21 = load i32, i32* %20, align 4\l  %22 = bitcast \{ i64, i32 \}* %agg.tmp2.coerce to i8*\l  %23 = bitcast %struct.dim3* %agg.tmp2 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64\l... 12, i1 false)\l  %24 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %agg.tmp2.coerce,\l... i32 0, i32 0\l  %25 = load i64, i64* %24, align 4\l  %26 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %agg.tmp2.coerce,\l... i32 0, i32 1\l  %27 = load i32, i32* %26, align 4\l  %call = call i32 @cudaLaunchKernel(i8* %8, i64 %19, i32 %21, i64 %25, i32\l... %27, i8** %13, i64 %14, %struct.CUstream_st* %15)\l  ret i32 %call\l}"];
}
